{"ast":null,"code":"var _jsxFileName = \"E:\\\\Do_an_bao_ve\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useContext } from 'react';\nimport { SearchContext } from '../../context/SearchContext'; // Giả sử bạn có SearchContext\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const {\n    checkInDate,\n    checkOutDate\n  } = useContext(SearchContext); // Lấy thông tin từ context\n\n  const [availableRooms, setAvailableRooms] = useState([]);\n  const [bookedRooms, setBookedRooms] = useState([]);\n  useEffect(() => {\n    const fetchBookedRooms = async () => {\n      try {\n        // Lấy các booking liên quan đến khách sạn\n        const res = await axios.get(`/api/bookings?hotelId=${hotelId}`);\n        setBookedRooms(res.data); // Giả sử đây là danh sách booking đã trả về\n      } catch (error) {\n        console.error(\"Lỗi khi lấy danh sách booking:\", error);\n      }\n    };\n\n    fetchBookedRooms();\n  }, [hotelId]);\n  useEffect(() => {\n    const checkAvailability = async () => {\n      try {\n        const roomsRes = await axios.get(`/api/rooms?hotelId=${hotelId}`);\n        const rooms = roomsRes.data; // Kiểm tra xem phòng nào còn trống\n\n        const available = rooms.filter(room => {\n          return !bookedRooms.some(booking => {\n            const bookingCheckIn = new Date(booking.checkInDate);\n            const bookingCheckOut = new Date(booking.checkOutDate);\n            return booking.roomId === room._id && (checkInDate >= bookingCheckIn && checkInDate < bookingCheckOut || checkOutDate > bookingCheckIn && checkOutDate <= bookingCheckOut || checkInDate <= bookingCheckIn && checkOutDate >= bookingCheckOut);\n          });\n        });\n        setAvailableRooms(available);\n      } catch (error) {\n        console.error(\"Lỗi khi lấy danh sách phòng:\", error);\n      }\n    };\n\n    if (bookedRooms.length > 0) {\n      checkAvailability();\n    }\n  }, [bookedRooms, checkInDate, checkOutDate, hotelId]);\n\n  const handleReserve = async () => {// Logic đặt phòng ở đây\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ch\\u1ECDn ph\\xF2ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), availableRooms.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Kh\\xF4ng c\\xF3 ph\\xF2ng tr\\u1ED1ng trong kho\\u1EA3ng th\\u1EDDi gian n\\xE0y.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: room._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), room.name, \" - Gi\\xE1: \", room.price]\n      }, room._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReserve,\n      children: \"\\u0110\\u1EB7t ph\\xF2ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpen(false),\n      children: \"\\u0110\\xF3ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"tED/Vip4D6hDyiaHerFuliPioHY=\");\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/Do_an_bao_ve/client/src/components/reserve/Reserve.jsx"],"names":["React","useEffect","useState","useContext","SearchContext","axios","Reserve","setOpen","hotelId","checkInDate","checkOutDate","availableRooms","setAvailableRooms","bookedRooms","setBookedRooms","fetchBookedRooms","res","get","data","error","console","checkAvailability","roomsRes","rooms","available","filter","room","some","booking","bookingCheckIn","Date","bookingCheckOut","roomId","_id","length","handleReserve","map","name","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { SearchContext } from '../../context/SearchContext'; // Giả sử bạn có SearchContext\r\nimport axios from 'axios';\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n  const { checkInDate, checkOutDate } = useContext(SearchContext); // Lấy thông tin từ context\r\n  const [availableRooms, setAvailableRooms] = useState([]);\r\n  const [bookedRooms, setBookedRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBookedRooms = async () => {\r\n      try {\r\n        // Lấy các booking liên quan đến khách sạn\r\n        const res = await axios.get(`/api/bookings?hotelId=${hotelId}`);\r\n        setBookedRooms(res.data); // Giả sử đây là danh sách booking đã trả về\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi lấy danh sách booking:\", error);\r\n      }\r\n    };\r\n\r\n    fetchBookedRooms();\r\n  }, [hotelId]);\r\n\r\n  useEffect(() => {\r\n    const checkAvailability = async () => {\r\n      try {\r\n        const roomsRes = await axios.get(`/api/rooms?hotelId=${hotelId}`);\r\n        const rooms = roomsRes.data;\r\n\r\n        // Kiểm tra xem phòng nào còn trống\r\n        const available = rooms.filter(room => {\r\n          return !bookedRooms.some(booking => {\r\n            const bookingCheckIn = new Date(booking.checkInDate);\r\n            const bookingCheckOut = new Date(booking.checkOutDate);\r\n            return (\r\n              booking.roomId === room._id &&\r\n              ((checkInDate >= bookingCheckIn && checkInDate < bookingCheckOut) ||\r\n              (checkOutDate > bookingCheckIn && checkOutDate <= bookingCheckOut) ||\r\n              (checkInDate <= bookingCheckIn && checkOutDate >= bookingCheckOut))\r\n            );\r\n          });\r\n        });\r\n\r\n        setAvailableRooms(available);\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi lấy danh sách phòng:\", error);\r\n      }\r\n    };\r\n\r\n    if (bookedRooms.length > 0) {\r\n      checkAvailability();\r\n    }\r\n  }, [bookedRooms, checkInDate, checkOutDate, hotelId]);\r\n\r\n  const handleReserve = async () => {\r\n    // Logic đặt phòng ở đây\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chọn phòng</h1>\r\n      {availableRooms.length === 0 ? (\r\n        <p>Không có phòng trống trong khoảng thời gian này.</p>\r\n      ) : (\r\n        <ul>\r\n          {availableRooms.map(room => (\r\n            <li key={room._id}>\r\n              <input type=\"checkbox\" value={room._id} />\r\n              {room.name} - Giá: {room.price}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <button onClick={handleReserve}>Đặt phòng</button>\r\n      <button onClick={() => setOpen(false)}>Đóng</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}