{"ast":null,"code":"var _jsxFileName = \"E:\\\\Do_an_bao_ve\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { SearchContext } from '../../context/SearchContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const {\n    dates\n  } = useContext(SearchContext);\n  const [availableRooms, setAvailableRooms] = useState([]);\n  useEffect(() => {\n    if (hotelId && dates.length > 0) {\n      const checkInDate = dates[0].startDate.toISOString(); // Chuyển đổi thành định dạng ISO\n\n      const checkOutDate = dates[0].endDate.toISOString(); // Chuyển đổi thành định dạng ISO\n\n      const fetchAvailableRooms = async () => {\n        try {\n          const res = await axios.get(`http://localhost:8800/api/rooms/available?hotelId=${hotelId}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}`);\n          setAvailableRooms(res.data);\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      fetchAvailableRooms();\n    }\n  }, [hotelId, dates]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), availableRooms.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No available rooms for the selected dates.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: room.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: room.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: $\", room.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Max People: \", room.maxPeople]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, room._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpen(false),\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"y7AQEILesHTYTavmCfmyr3Gy/vE=\");\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/Do_an_bao_ve/client/src/components/reserve/Reserve.jsx"],"names":["React","useEffect","useState","useContext","SearchContext","axios","Reserve","setOpen","hotelId","dates","availableRooms","setAvailableRooms","length","checkInDate","startDate","toISOString","checkOutDate","endDate","fetchAvailableRooms","res","get","data","err","console","error","map","room","title","desc","price","maxPeople","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,QAA0B;AAAA;;AAAA,MAAzB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAyB;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACC,aAAD,CAA5B;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAO,IAAIC,KAAK,CAACG,MAAN,GAAe,CAA9B,EAAiC;AAC/B,YAAMC,WAAW,GAAGJ,KAAK,CAAC,CAAD,CAAL,CAASK,SAAT,CAAmBC,WAAnB,EAApB,CAD+B,CACuB;;AACtD,YAAMC,YAAY,GAAGP,KAAK,CAAC,CAAD,CAAL,CAASQ,OAAT,CAAiBF,WAAjB,EAArB,CAF+B,CAEsB;;AAErD,YAAMG,mBAAmB,GAAG,YAAY;AACtC,YAAI;AACF,gBAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CACf,qDAAoDZ,OAAQ,gBAAeK,WAAY,iBAAgBG,YAAa,EADrG,CAAlB;AAGAL,UAAAA,iBAAiB,CAACQ,GAAG,CAACE,IAAL,CAAjB;AACD,SALD,CAKE,OAAOC,GAAP,EAAY;AACZC,UAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,OATD;;AAWAJ,MAAAA,mBAAmB;AACpB;AACF,GAlBQ,EAkBN,CAACV,OAAD,EAAUC,KAAV,CAlBM,CAAT;AAoBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,cAAc,CAACE,MAAf,KAA0B,CAA1B,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBACGF,cAAc,CAACe,GAAf,CAAoBC,IAAD,iBAClB;AAAA,+BACE;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,mCAAYF,IAAI,CAACG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,uCAAgBH,IAAI,CAACI,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASJ,IAAI,CAACK,GAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALJ,eAkBE;AAAQ,MAAA,OAAO,EAAE,MAAMxB,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA9CD;;GAAMD,O;;KAAAA,O;AAgDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { SearchContext } from '../../context/SearchContext';\r\nimport axios from 'axios';\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n  const { dates } = useContext(SearchContext);\r\n  const [availableRooms, setAvailableRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (hotelId && dates.length > 0) {\r\n      const checkInDate = dates[0].startDate.toISOString(); // Chuyển đổi thành định dạng ISO\r\n      const checkOutDate = dates[0].endDate.toISOString(); // Chuyển đổi thành định dạng ISO\r\n\r\n      const fetchAvailableRooms = async () => {\r\n        try {\r\n          const res = await axios.get(\r\n            `http://localhost:8800/api/rooms/available?hotelId=${hotelId}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}`\r\n          );\r\n          setAvailableRooms(res.data);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n      fetchAvailableRooms();\r\n    }\r\n  }, [hotelId, dates]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Rooms</h2>\r\n      {availableRooms.length === 0 ? (\r\n        <p>No available rooms for the selected dates.</p>\r\n      ) : (\r\n        <ul>\r\n          {availableRooms.map((room) => (\r\n            <li key={room._id}>\r\n              <div>\r\n                <h3>{room.title}</h3>\r\n                <p>{room.desc}</p>\r\n                <p>Price: ${room.price}</p>\r\n                <p>Max People: {room.maxPeople}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <button onClick={() => setOpen(false)}>Close</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}