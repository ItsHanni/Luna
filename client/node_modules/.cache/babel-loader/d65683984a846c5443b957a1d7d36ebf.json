{"ast":null,"code":"var _jsxFileName = \"E:\\\\Do_an_bao_ve\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext'; // Đảm bảo import AuthContext\n\nimport { SearchContext } from '../../context/SearchContext'; // Đảm bảo import SearchContext\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen\n  } = _ref;\n  const {\n    user\n  } = useContext(AuthContext); // Lấy thông tin người dùng từ context\n\n  const {\n    dates,\n    hotelId\n  } = useContext(SearchContext); // Lấy thông tin ngày và hotelId từ context\n\n  const [availableRooms, setAvailableRooms] = useState([]);\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const checkInDate = dates[0].startDate; // Lấy ngày check-in từ dates\n\n  const checkOutDate = dates[0].endDate; // Lấy ngày check-out từ dates\n\n  useEffect(() => {\n    const fetchAvailableRooms = async () => {\n      try {\n        const res = await axios.get(`http://localhost:8800/api/rooms/available?hotelId=${hotelId}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}`);\n        setAvailableRooms(res.data); // Cập nhật danh sách phòng còn trống\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    fetchAvailableRooms();\n  }, [hotelId, checkInDate, checkOutDate]);\n\n  const handleSelect = roomId => {\n    setSelectedRooms(prev => {\n      if (prev.includes(roomId)) {\n        return prev.filter(id => id !== roomId); // Bỏ chọn phòng nếu đã chọn\n      } else {\n        return [...prev, roomId]; // Chọn phòng\n      }\n    });\n  };\n\n  const handleReserve = async () => {\n    if (selectedRooms.length === 0) {\n      alert('Please select at least one room!'); // Thông báo nếu không chọn phòng\n\n      return;\n    }\n\n    try {\n      await axios.post('http://localhost:8800/api/bookings', {\n        hotelId,\n        roomIds: selectedRooms,\n        userId: user.id,\n        // Lấy userId từ context\n        checkInDate,\n        checkOutDate\n      });\n      alert('Room(s) reserved successfully!');\n      setOpen(false); // Đóng modal sau khi đặt phòng\n    } catch (err) {\n      console.error(err);\n      alert('Failed to reserve room(s)');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), availableRooms.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No available rooms for the selected dates.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: room.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: room.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: $\", room.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => handleSelect(room._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), \"Select Room\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, room._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReserve,\n      children: \"Reserve Selected Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"7xNbvMSnkx8IicWh41jn5g9YD5M=\");\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/Do_an_bao_ve/client/src/components/reserve/Reserve.jsx"],"names":["React","useEffect","useState","useContext","AuthContext","SearchContext","axios","Reserve","setOpen","user","dates","hotelId","availableRooms","setAvailableRooms","selectedRooms","setSelectedRooms","checkInDate","startDate","checkOutDate","endDate","fetchAvailableRooms","res","get","data","err","console","error","handleSelect","roomId","prev","includes","filter","id","handleReserve","length","alert","post","roomIds","userId","map","room","title","desc","price","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,2BAA5B,C,CAAyD;;AACzD,SAASC,aAAT,QAA8B,6BAA9B,C,CAA6D;;AAC7D,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAWN,UAAU,CAACC,WAAD,CAA3B,CAD+B,CACW;;AAC1C,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBR,UAAU,CAACE,aAAD,CAArC,CAF+B,CAEuB;;AACtD,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMc,WAAW,GAAGN,KAAK,CAAC,CAAD,CAAL,CAASO,SAA7B,CAN+B,CAMS;;AACxC,QAAMC,YAAY,GAAGR,KAAK,CAAC,CAAD,CAAL,CAASS,OAA9B,CAP+B,CAOQ;;AAEvClB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,mBAAmB,GAAG,YAAY;AACtC,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CACf,qDAAoDX,OAAQ,gBAAeK,WAAY,iBAAgBE,YAAa,EADrG,CAAlB;AAGAL,QAAAA,iBAAiB,CAACQ,GAAG,CAACE,IAAL,CAAjB,CAJE,CAI2B;AAC9B,OALD,CAKE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,KATD;;AAUAJ,IAAAA,mBAAmB;AACpB,GAZQ,EAYN,CAACT,OAAD,EAAUK,WAAV,EAAuBE,YAAvB,CAZM,CAAT;;AAcA,QAAMS,YAAY,GAAIC,MAAD,IAAY;AAC/Bb,IAAAA,gBAAgB,CAAEc,IAAD,IAAU;AACzB,UAAIA,IAAI,CAACC,QAAL,CAAcF,MAAd,CAAJ,EAA2B;AACzB,eAAOC,IAAI,CAACE,MAAL,CAAaC,EAAD,IAAQA,EAAE,KAAKJ,MAA3B,CAAP,CADyB,CACkB;AAC5C,OAFD,MAEO;AACL,eAAO,CAAC,GAAGC,IAAJ,EAAUD,MAAV,CAAP,CADK,CACqB;AAC3B;AACF,KANe,CAAhB;AAOD,GARD;;AAUA,QAAMK,aAAa,GAAG,YAAY;AAChC,QAAInB,aAAa,CAACoB,MAAd,KAAyB,CAA7B,EAAgC;AAC9BC,MAAAA,KAAK,CAAC,kCAAD,CAAL,CAD8B,CACa;;AAC3C;AACD;;AAED,QAAI;AACF,YAAM7B,KAAK,CAAC8B,IAAN,CAAW,oCAAX,EAAiD;AACrDzB,QAAAA,OADqD;AAErD0B,QAAAA,OAAO,EAAEvB,aAF4C;AAGrDwB,QAAAA,MAAM,EAAE7B,IAAI,CAACuB,EAHwC;AAGpC;AACjBhB,QAAAA,WAJqD;AAKrDE,QAAAA;AALqD,OAAjD,CAAN;AAOAiB,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACA3B,MAAAA,OAAO,CAAC,KAAD,CAAP,CATE,CASc;AACjB,KAVD,CAUE,OAAOgB,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAW,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACD;AACF,GApBD;;AAsBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGvB,cAAc,CAACsB,MAAf,KAA0B,CAA1B,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBACGtB,cAAc,CAAC2B,GAAf,CAAoBC,IAAD,iBAClB;AAAA,+BACE;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,mCAAYF,IAAI,CAACG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,QAAQ,EAAE,MAAMhB,YAAY,CAACa,IAAI,CAACI,GAAN;AAF9B;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASJ,IAAI,CAACI,GAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALJ,eAwBE;AAAQ,MAAA,OAAO,EAAEX,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAnFD;;GAAM1B,O;;KAAAA,O;AAqFN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext'; // Đảm bảo import AuthContext\r\nimport { SearchContext } from '../../context/SearchContext'; // Đảm bảo import SearchContext\r\nimport axios from 'axios';\r\n\r\nconst Reserve = ({ setOpen }) => {\r\n  const { user } = useContext(AuthContext); // Lấy thông tin người dùng từ context\r\n  const { dates, hotelId } = useContext(SearchContext); // Lấy thông tin ngày và hotelId từ context\r\n  const [availableRooms, setAvailableRooms] = useState([]);\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n\r\n  const checkInDate = dates[0].startDate; // Lấy ngày check-in từ dates\r\n  const checkOutDate = dates[0].endDate; // Lấy ngày check-out từ dates\r\n\r\n  useEffect(() => {\r\n    const fetchAvailableRooms = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `http://localhost:8800/api/rooms/available?hotelId=${hotelId}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}`\r\n        );\r\n        setAvailableRooms(res.data); // Cập nhật danh sách phòng còn trống\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    fetchAvailableRooms();\r\n  }, [hotelId, checkInDate, checkOutDate]);\r\n\r\n  const handleSelect = (roomId) => {\r\n    setSelectedRooms((prev) => {\r\n      if (prev.includes(roomId)) {\r\n        return prev.filter((id) => id !== roomId); // Bỏ chọn phòng nếu đã chọn\r\n      } else {\r\n        return [...prev, roomId]; // Chọn phòng\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleReserve = async () => {\r\n    if (selectedRooms.length === 0) {\r\n      alert('Please select at least one room!'); // Thông báo nếu không chọn phòng\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('http://localhost:8800/api/bookings', {\r\n        hotelId,\r\n        roomIds: selectedRooms,\r\n        userId: user.id, // Lấy userId từ context\r\n        checkInDate,\r\n        checkOutDate,\r\n      });\r\n      alert('Room(s) reserved successfully!');\r\n      setOpen(false); // Đóng modal sau khi đặt phòng\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Failed to reserve room(s)');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Available Rooms</h2>\r\n      {availableRooms.length === 0 ? (\r\n        <p>No available rooms for the selected dates.</p>\r\n      ) : (\r\n        <ul>\r\n          {availableRooms.map((room) => (\r\n            <li key={room._id}>\r\n              <div>\r\n                <h3>{room.title}</h3>\r\n                <p>{room.desc}</p>\r\n                <p>Price: ${room.price}</p>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    onChange={() => handleSelect(room._id)}\r\n                  />\r\n                  Select Room\r\n                </label>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <button onClick={handleReserve}>Reserve Selected Rooms</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}