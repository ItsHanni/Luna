{"ast":null,"code":"var _jsxFileName = \"E:\\\\Do_an_bao_ve\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; // Import CSS for toast notifications\n\nimport \"./reserve.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const {\n    dates\n  } = useContext(SearchContext);\n  const {\n    user\n  } = useContext(AuthContext);\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const checkInDate = new Date(dates[0].startDate);\n  const checkOutDate = new Date(dates[0].endDate); // Gọi API để lấy danh sách roomNumbers trống\n\n  const {\n    data: availableRoomNumbers,\n    loading,\n    error\n  } = useFetch(`/rooms/available?hotelId=${hotelId}&checkInDate=${checkInDate.toISOString()}&checkOutDate=${checkOutDate.toISOString()}`);\n\n  const handleSelectRoom = roomId => {\n    setSelectedRooms(prev => {\n      if (prev.includes(roomId)) {\n        return prev.filter(id => id !== roomId);\n      } else {\n        return [...prev, roomId];\n      }\n    });\n  };\n\n  const handleBooking = async e => {\n    e.preventDefault(); // Ngăn chặn hành động gửi form mặc định\n\n    if (selectedRooms.length > 0) {\n      const bookingData = {\n        userId: user ? user._id : null,\n        hotelId,\n        roomId: selectedRooms,\n        roomNumber: selectedRooms.map(roomId => availableRoomNumbers.find(room => room.roomId === roomId).roomNumber),\n        // Chắc chắn roomNumber là một mảng\n        checkInDate: checkInDate.toISOString().split(\"T\")[0],\n        // YYYY-MM-DD\n        checkOutDate: checkOutDate.toISOString().split(\"T\")[0]\n      };\n      console.log(\"Booking Data:\", bookingData); // Kiểm tra dữ liệu\n\n      try {\n        const response = await fetch(\"http://localhost:8800/api/bookings\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(bookingData)\n        });\n        const result = await response.json();\n\n        if (response.ok) {\n          toast.success(\"Đặt phòng thành công!\");\n          setOpen(false);\n        } else {\n          toast.error(\"Đặt phòng thất bại: \" + result.message);\n        }\n      } catch (error) {\n        console.error(\"Error booking room:\", error);\n        toast.error(\"Đã xảy ra lỗi khi đặt phòng.\");\n      }\n    } else {\n      toast.warning(\"Vui lòng chọn ít nhất một phòng.\");\n    }\n  }; // Nhóm các phòng có cùng ID\n\n\n  const groupedRooms = availableRoomNumbers.reduce((acc, room) => {\n    const existing = acc.find(r => r.roomId === room.roomId);\n\n    if (existing) {\n      existing.roomNumbers.push(room.roomNumber);\n    } else {\n      acc.push({ ...room,\n        roomNumbers: [room.roomNumber]\n      });\n    }\n\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"rContainer\",\n      onSubmit: handleBooking,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rClose\",\n        onClick: () => setOpen(false),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"rTitle\",\n        children: \"C\\xE1c ph\\xF2ng tr\\u1ED1ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0110ang t\\u1EA3i...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0110\\xE3 x\\u1EA3y ra l\\u1ED7i: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : groupedRooms.length > 0 ? groupedRooms.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"rRoomTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"Max people: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: [\"Gi\\xE1: \", item.price, \" VN\\u0110\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\",\n          children: item.roomNumbers.map((roomNumber, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: roomNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => handleSelectRoom(item.roomId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, item.roomId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0110\\xE3 h\\u1EBFt ph\\xF2ng.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rButton\",\n        type: \"submit\",\n        disabled: selectedRooms.length === 0,\n        children: \"\\u0110\\u1EB7t ph\\xF2ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"AX0XVNEUG2v5wcK4MwTmCzMT408=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/Do_an_bao_ve/client/src/components/reserve/Reserve.jsx"],"names":["useContext","useState","SearchContext","useFetch","AuthContext","ToastContainer","toast","Reserve","setOpen","hotelId","dates","user","selectedRooms","setSelectedRooms","checkInDate","Date","startDate","checkOutDate","endDate","data","availableRoomNumbers","loading","error","toISOString","handleSelectRoom","roomId","prev","includes","filter","id","handleBooking","e","preventDefault","length","bookingData","userId","_id","roomNumber","map","find","room","split","console","log","response","fetch","method","headers","body","JSON","stringify","result","json","ok","success","message","warning","groupedRooms","reduce","acc","existing","r","roomNumbers","push","item","title","desc","maxPeople","price","index"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\"; \r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\"; // Import CSS for toast notifications\r\nimport \"./reserve.css\";\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n  const { dates } = useContext(SearchContext);\r\n  const { user } = useContext(AuthContext);\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n\r\n  const checkInDate = new Date(dates[0].startDate);\r\n  const checkOutDate = new Date(dates[0].endDate);\r\n\r\n  // Gọi API để lấy danh sách roomNumbers trống\r\n  const { data: availableRoomNumbers, loading, error } = useFetch(\r\n    `/rooms/available?hotelId=${hotelId}&checkInDate=${checkInDate.toISOString()}&checkOutDate=${checkOutDate.toISOString()}`\r\n  );\r\n\r\n  const handleSelectRoom = (roomId) => {\r\n    setSelectedRooms((prev) => {\r\n      if (prev.includes(roomId)) {\r\n        return prev.filter((id) => id !== roomId);\r\n      } else {\r\n        return [...prev, roomId];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleBooking = async (e) => {\r\n    e.preventDefault(); // Ngăn chặn hành động gửi form mặc định\r\n  \r\n    if (selectedRooms.length > 0) {\r\n      const bookingData = {\r\n        userId: user ? user._id : null,\r\n        hotelId,\r\n        roomId: selectedRooms,\r\n        roomNumber: selectedRooms.map(roomId => \r\n          availableRoomNumbers.find(room => room.roomId === roomId).roomNumber\r\n        ), // Chắc chắn roomNumber là một mảng\r\n        checkInDate: checkInDate.toISOString().split(\"T\")[0], // YYYY-MM-DD\r\n        checkOutDate: checkOutDate.toISOString().split(\"T\")[0],\r\n      };\r\n  \r\n      console.log(\"Booking Data:\", bookingData); // Kiểm tra dữ liệu\r\n  \r\n      try {\r\n        const response = await fetch(\"http://localhost:8800/api/bookings\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(bookingData),\r\n        });\r\n  \r\n        const result = await response.json();\r\n        if (response.ok) {\r\n          toast.success(\"Đặt phòng thành công!\");\r\n          setOpen(false);\r\n        } else {\r\n          toast.error(\"Đặt phòng thất bại: \" + result.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error booking room:\", error);\r\n        toast.error(\"Đã xảy ra lỗi khi đặt phòng.\");\r\n      }\r\n    } else {\r\n      toast.warning(\"Vui lòng chọn ít nhất một phòng.\");\r\n    }\r\n  };\r\n  \r\n  // Nhóm các phòng có cùng ID\r\n  const groupedRooms = availableRoomNumbers.reduce((acc, room) => {\r\n    const existing = acc.find((r) => r.roomId === room.roomId);\r\n    if (existing) {\r\n      existing.roomNumbers.push(room.roomNumber);\r\n    } else {\r\n      acc.push({ ...room, roomNumbers: [room.roomNumber] });\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"reserve\">\r\n      <form className=\"rContainer\" onSubmit={handleBooking}>\r\n        <span className=\"rClose\" onClick={() => setOpen(false)}>✖</span>\r\n        <h2 className=\"rTitle\">Các phòng trống</h2>\r\n        {loading ? (\r\n          <p>Đang tải...</p>\r\n        ) : error ? (\r\n          <p>Đã xảy ra lỗi: {error.message}</p>\r\n        ) : groupedRooms.length > 0 ? (\r\n          groupedRooms.map((item) => (\r\n            <div className=\"rItem\" key={item.roomId}>\r\n              <div className=\"rItemInfo\">\r\n                <h3 className=\"rRoomTitle\">{item.title}</h3>\r\n                <div className=\"rDesc\">{item.desc}</div>\r\n                <div className=\"rMax\">\r\n                  Max people: <b>{item.maxPeople}</b>\r\n                </div>\r\n                <div className=\"rPrice\">Giá: {item.price} VNĐ</div>\r\n              </div>\r\n              <div className=\"rSelectRooms\">\r\n                {item.roomNumbers.map((roomNumber, index) => (\r\n                  <div className=\"room\" key={index}>\r\n                    <label>{roomNumber}</label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleSelectRoom(item.roomId)}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Đã hết phòng.</p>\r\n        )}\r\n        <button className=\"rButton\" type=\"submit\" disabled={selectedRooms.length === 0}>\r\n          Đặt phòng\r\n        </button>\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}