{"ast":null,"code":"var _jsxFileName = \"E:\\\\Do_an_bao_ve\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../context/AuthContext'; // Thay đổi đường dẫn nếu cần\n\nimport { SearchContext } from '../../context/SearchContext'; // Thay đổi đường dẫn nếu cần\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const {\n    user\n  } = useContext(AuthContext); // Lấy userId từ context\n\n  const {\n    dates\n  } = useContext(SearchContext); // Lấy ngày đã tìm kiếm từ context\n\n  const [availableRooms, setAvailableRooms] = useState([]);\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  useEffect(() => {\n    const fetchAvailableRooms = async () => {\n      try {\n        const response = await axios.get(`/api/rooms/available`, {\n          params: {\n            hotelId,\n            checkInDate: dates[0].startDate,\n            checkOutDate: dates[0].endDate\n          }\n        });\n        setAvailableRooms(response.data);\n      } catch (error) {\n        console.error(\"Lỗi khi lấy danh sách phòng:\", error);\n      }\n    };\n\n    fetchAvailableRooms();\n  }, [hotelId, dates]);\n\n  const handleSelect = roomId => {\n    setSelectedRooms(prev => {\n      if (prev.includes(roomId)) {\n        return prev.filter(id => id !== roomId);\n      } else {\n        return [...prev, roomId];\n      }\n    });\n  };\n\n  const handleBooking = async () => {\n    try {\n      await axios.post('/api/bookings', {\n        hotelId,\n        roomIds: selectedRooms,\n        userId: user.id,\n        // Lấy userId từ context\n        checkInDate: dates[0].startDate,\n        checkOutDate: dates[0].endDate\n      });\n      alert('Đặt phòng thành công!');\n      setOpen(false);\n    } catch (error) {\n      console.error(\"Lỗi khi đặt phòng:\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ch\\u1ECDn ph\\xF2ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), availableRooms.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Kh\\xF4ng c\\xF3 ph\\xF2ng n\\xE0o tr\\u1ED1ng.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: room.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: room.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gi\\xE1: \", room.price, \" VN\\u0110\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => handleSelect(room._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, room._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBooking,\n      children: \"\\u0110\\u1EB7t ph\\xF2ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpen(false),\n      children: \"\\u0110\\xF3ng\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"FDWkPOPstITbFq6s9w5YQHsZxnA=\");\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/Do_an_bao_ve/client/src/components/reserve/Reserve.jsx"],"names":["React","useEffect","useState","useContext","axios","AuthContext","SearchContext","Reserve","setOpen","hotelId","user","dates","availableRooms","setAvailableRooms","selectedRooms","setSelectedRooms","fetchAvailableRooms","response","get","params","checkInDate","startDate","checkOutDate","endDate","data","error","console","handleSelect","roomId","prev","includes","filter","id","handleBooking","post","roomIds","userId","alert","length","map","room","title","desc","price","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../context/AuthContext'; // Thay đổi đường dẫn nếu cần\r\nimport { SearchContext } from '../../context/SearchContext'; // Thay đổi đường dẫn nếu cần\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n  const { user } = useContext(AuthContext); // Lấy userId từ context\r\n  const { dates } = useContext(SearchContext); // Lấy ngày đã tìm kiếm từ context\r\n  const [availableRooms, setAvailableRooms] = useState([]);\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAvailableRooms = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/rooms/available`, {\r\n          params: {\r\n            hotelId,\r\n            checkInDate: dates[0].startDate,\r\n            checkOutDate: dates[0].endDate,\r\n          },\r\n        });\r\n        setAvailableRooms(response.data);\r\n      } catch (error) {\r\n        console.error(\"Lỗi khi lấy danh sách phòng:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAvailableRooms();\r\n  }, [hotelId, dates]);\r\n\r\n  const handleSelect = (roomId) => {\r\n    setSelectedRooms((prev) => {\r\n      if (prev.includes(roomId)) {\r\n        return prev.filter(id => id !== roomId);\r\n      } else {\r\n        return [...prev, roomId];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleBooking = async () => {\r\n    try {\r\n      await axios.post('/api/bookings', {\r\n        hotelId,\r\n        roomIds: selectedRooms,\r\n        userId: user.id, // Lấy userId từ context\r\n        checkInDate: dates[0].startDate,\r\n        checkOutDate: dates[0].endDate,\r\n      });\r\n      alert('Đặt phòng thành công!');\r\n      setOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Lỗi khi đặt phòng:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chọn phòng</h2>\r\n      {availableRooms.length === 0 ? (\r\n        <p>Không có phòng nào trống.</p>\r\n      ) : (\r\n        availableRooms.map((room) => (\r\n          <div key={room._id}>\r\n            <h3>{room.title}</h3>\r\n            <p>{room.desc}</p>\r\n            <p>Giá: {room.price} VNĐ</p>\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={() => handleSelect(room._id)}\r\n            />\r\n          </div>\r\n        ))\r\n      )}\r\n      <button onClick={handleBooking}>Đặt phòng</button>\r\n      <button onClick={() => setOpen(false)}>Đóng</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}