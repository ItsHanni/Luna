{"ast":null,"code":"var _jsxFileName = \"E:\\\\Do_an_bao_ve\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; // Import CSS for toast notifications\n\nimport \"./reserve.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const {\n    dates\n  } = useContext(SearchContext);\n  const {\n    user\n  } = useContext(AuthContext);\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const checkInDate = dates[0].startDate;\n  const checkOutDate = dates[0].endDate;\n  const {\n    data: availableRooms,\n    loading,\n    error\n  } = useFetch(`/rooms/available?hotelId=${hotelId}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}`);\n\n  const handleSelectRoom = roomId => {\n    setSelectedRooms(prev => {\n      if (prev.includes(roomId)) {\n        return prev.filter(id => id !== roomId);\n      } else {\n        return [...prev, roomId];\n      }\n    });\n  };\n\n  const handleBooking = async () => {\n    if (selectedRooms.length > 0) {\n      const bookingData = {\n        userId: user ? user._id : null,\n        hotelId,\n        roomId: selectedRooms,\n        checkInDate,\n        checkOutDate\n      };\n\n      try {\n        const response = await fetch(\"http://localhost:8800/api/bookings\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(bookingData)\n        });\n        const result = await response.json();\n\n        if (response.ok) {\n          toast.success(\"Đặt phòng thành công!\"); // Thông báo thành công\n\n          setOpen(false);\n        } else {\n          toast.error(\"Đặt phòng thất bại: \" + result.message); // Thông báo thất bại\n        }\n      } catch (error) {\n        console.error(\"Error booking room:\", error);\n        toast.error(\"Đã xảy ra lỗi khi đặt phòng.\"); // Thông báo lỗi\n      }\n    } else {\n      toast.warning(\"Vui lòng chọn ít nhất một phòng.\"); // Thông báo nếu không chọn phòng\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rClose\",\n        onClick: () => setOpen(false),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"rTitle\",\n        children: \"C\\xE1c ph\\xF2ng tr\\u1ED1ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0110ang t\\u1EA3i...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0110\\xE3 x\\u1EA3y ra l\\u1ED7i: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : availableRooms.length > 0 ? availableRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"rTitle\",\n            children: room.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rDesc\",\n            children: room.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rPrice\",\n            children: [\"Gi\\xE1: $\", room.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: room._id,\n              onChange: () => handleSelectRoom(room._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), \"Ch\\u1ECDn ph\\xF2ng\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, room._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Kh\\xF4ng c\\xF3 ph\\xF2ng tr\\u1ED1ng trong kho\\u1EA3ng th\\u1EDDi gian \\u0111\\xE3 ch\\u1ECDn.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rButton\",\n        onClick: handleBooking,\n        disabled: selectedRooms.length === 0,\n        children: \"\\u0110\\u1EB7t ph\\xF2ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"FHFbKDvNXwAlqpUhUu3wDoagkW8=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/Do_an_bao_ve/client/src/components/reserve/Reserve.jsx"],"names":["useContext","useState","SearchContext","useFetch","AuthContext","ToastContainer","toast","Reserve","setOpen","hotelId","dates","user","selectedRooms","setSelectedRooms","checkInDate","startDate","checkOutDate","endDate","data","availableRooms","loading","error","handleSelectRoom","roomId","prev","includes","filter","id","handleBooking","length","bookingData","userId","_id","response","fetch","method","headers","body","JSON","stringify","result","json","ok","success","message","console","warning","map","room","title","desc","price"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\"; // Import CSS for toast notifications\r\nimport \"./reserve.css\";\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n  const { dates } = useContext(SearchContext);\r\n  const { user } = useContext(AuthContext);\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n\r\n  const checkInDate = dates[0].startDate;\r\n  const checkOutDate = dates[0].endDate;\r\n\r\n  const { data: availableRooms, loading, error } = useFetch(\r\n    `/rooms/available?hotelId=${hotelId}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}`\r\n  );\r\n\r\n  const handleSelectRoom = (roomId) => {\r\n    setSelectedRooms((prev) => {\r\n      if (prev.includes(roomId)) {\r\n        return prev.filter((id) => id !== roomId);\r\n      } else {\r\n        return [...prev, roomId];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleBooking = async () => {\r\n    if (selectedRooms.length > 0) {\r\n      const bookingData = {\r\n        userId: user ? user._id : null,\r\n        hotelId,\r\n        roomId: selectedRooms,\r\n        checkInDate,\r\n        checkOutDate,\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(\"http://localhost:8800/api/bookings\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(bookingData),\r\n        });\r\n\r\n        const result = await response.json();\r\n        if (response.ok) {\r\n          toast.success(\"Đặt phòng thành công!\"); // Thông báo thành công\r\n          setOpen(false);\r\n        } else {\r\n          toast.error(\"Đặt phòng thất bại: \" + result.message); // Thông báo thất bại\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error booking room:\", error);\r\n        toast.error(\"Đã xảy ra lỗi khi đặt phòng.\"); // Thông báo lỗi\r\n      }\r\n    } else {\r\n      toast.warning(\"Vui lòng chọn ít nhất một phòng.\"); // Thông báo nếu không chọn phòng\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reserve\">\r\n      <div className=\"rContainer\">\r\n        <span className=\"rClose\" onClick={() => setOpen(false)}>✖</span>\r\n        <h2 className=\"rTitle\">Các phòng trống</h2>\r\n        {loading ? (\r\n          <p>Đang tải...</p>\r\n        ) : error ? (\r\n          <p>Đã xảy ra lỗi: {error.message}</p>\r\n        ) : availableRooms.length > 0 ? (\r\n          availableRooms.map((room) => (\r\n            <div className=\"rItem\" key={room._id}>\r\n              <div className=\"room\">\r\n                <h3 className=\"rTitle\">{room.title}</h3>\r\n                <p className=\"rDesc\">{room.desc}</p>\r\n                <span className=\"rPrice\">Giá: ${room.price}</span>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={room._id}\r\n                    onChange={() => handleSelectRoom(room._id)}\r\n                  />\r\n                  Chọn phòng\r\n                </label>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Không có phòng trống trong khoảng thời gian đã chọn.</p>\r\n        )}\r\n        <button className=\"rButton\" onClick={handleBooking} disabled={selectedRooms.length === 0}>\r\n          Đặt phòng\r\n        </button>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}