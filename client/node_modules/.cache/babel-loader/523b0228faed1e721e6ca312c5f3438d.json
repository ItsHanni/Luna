{"ast":null,"code":"var _jsxFileName = \"E:\\\\Do_an_bao_ve\\\\client\\\\src\\\\pages\\\\booking\\\\Booking.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport useFetch from \"../../hooks/useFetch\";\nimport \"./booking.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; // Import CSS for toast notifications\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Booking = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext); // Lấy thông tin user từ context\n\n  const {\n    data,\n    loading,\n    error,\n    reFetch\n  } = useFetch(`http://localhost:8800/api/bookings/history?userId=${user ? user._id : ''}`); // Thêm userId vào URL\n\n  useEffect(() => {\n    if (user) {\n      reFetch(); // Gọi lại API khi user đã sẵn sàng\n    }\n  }, [user, reFetch]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this); // Hiển thị khi dữ liệu đang tải\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Something went wrong: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this); // Hiển thị nếu có lỗi\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userBookingHistory\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Booking History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"bookingTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hotel Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Check-in Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Check-out Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(booking => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: booking.hotelId.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: booking.roomId.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(booking.checkInDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(booking.checkOutDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: booking.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this), \" \"]\n        }, booking._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookings found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) // Hiển thị nếu không có đặt phòng nào\n    , /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Booking, \"S/jZJbn6g/Wu4Xo7/s+9Hf7/lY4=\", false, function () {\n  return [useFetch];\n});\n\n_c = Booking;\nexport default Booking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"sources":["E:/Do_an_bao_ve/client/src/pages/booking/Booking.jsx"],"names":["React","useContext","useEffect","AuthContext","useFetch","ToastContainer","toast","Booking","user","data","loading","error","reFetch","_id","message","length","map","booking","hotelId","name","roomId","title","Date","checkInDate","toLocaleDateString","checkOutDate","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,eAAP;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP,C,CAAgD;;;;AAEhD,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAWP,UAAU,CAACE,WAAD,CAA3B,CADkB,CACwB;;AAC1C,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAoCR,QAAQ,CAAE,qDAAoDI,IAAI,GAAGA,IAAI,CAACK,GAAR,GAAc,EAAG,EAA3E,CAAlD,CAFkB,CAE+G;;AAEjIX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,IAAJ,EAAU;AACNI,MAAAA,OAAO,GADD,CACK;AACd;AACJ,GAJQ,EAIN,CAACJ,IAAD,EAAOI,OAAP,CAJM,CAAT;;AAMA,MAAIF,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,CADS,CACqB;AACjC;;AAED,MAAIC,KAAJ,EAAW;AACP,wBAAO;AAAA,2CAA4BA,KAAK,CAACG,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP,CADO,CACkD;AAC5D;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKL,IAAI,CAACM,MAAL,GAAc,CAAd,gBACG;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,kBACKN,IAAI,CAACO,GAAL,CAAUC,OAAD,iBACN;AAAA,kCACI;AAAA,sBAAKA,OAAO,CAACC,OAAR,CAAgBC;AAArB;AAAA;AAAA;AAAA;AAAA,kBADJ,oBAEI;AAAA,sBAAKF,OAAO,CAACG,MAAR,CAAeC;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFJ,oBAGI;AAAA,sBAAK,IAAIC,IAAJ,CAASL,OAAO,CAACM,WAAjB,EAA8BC,kBAA9B;AAAL;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAK,IAAIF,IAAJ,CAASL,OAAO,CAACQ,YAAjB,EAA+BD,kBAA/B;AAAL;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,sBAAKP,OAAO,CAACS;AAAb;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAAST,OAAO,CAACJ,GAAjB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAwBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBH,CAwB4B;AA1BjC,mBA4BI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAlDD;;GAAMN,O;UAEwCH,Q;;;KAFxCG,O;AAoDN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport \"./booking.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\"; // Import CSS for toast notifications\r\n\r\nconst Booking = () => {\r\n    const { user } = useContext(AuthContext); // Lấy thông tin user từ context\r\n    const { data, loading, error, reFetch } = useFetch(`http://localhost:8800/api/bookings/history?userId=${user ? user._id : ''}`); // Thêm userId vào URL\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            reFetch(); // Gọi lại API khi user đã sẵn sàng\r\n        }\r\n    }, [user, reFetch]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Hiển thị khi dữ liệu đang tải\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Something went wrong: {error.message}</div>; // Hiển thị nếu có lỗi\r\n    }\r\n\r\n    return (\r\n        <div className=\"userBookingHistory\">\r\n            <h2>Your Booking History</h2>\r\n            {data.length > 0 ? (\r\n                <table className=\"bookingTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Hotel Name</th>\r\n                            <th>Room Title</th>\r\n                            <th>Check-in Date</th>\r\n                            <th>Check-out Date</th>\r\n                            <th>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map((booking) => (\r\n                            <tr key={booking._id}>\r\n                                <td>{booking.hotelId.name}</td> {/* Lấy thông tin khách sạn */}\r\n                                <td>{booking.roomId.title}</td> {/* Lấy tiêu đề phòng */}\r\n                                <td>{new Date(booking.checkInDate).toLocaleDateString()}</td>\r\n                                <td>{new Date(booking.checkOutDate).toLocaleDateString()}</td>\r\n                                <td>{booking.status}</td> {/* Trạng thái của đặt phòng */}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No bookings found</p> // Hiển thị nếu không có đặt phòng nào\r\n            )}\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Booking;\r\n"]},"metadata":{},"sourceType":"module"}