{"ast":null,"code":"var _jsxFileName = \"E:\\\\Do_an_bao_ve\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./reserve.css\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\"; // Thêm ToastContainer từ react-toastify\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    const dates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\n    return !isFound; // Trả về true nếu phòng có sẵn\n  };\n\n  const handleSelect = roomId => {\n    if (selectedRooms.includes(roomId)) {\n      setSelectedRooms(selectedRooms.filter(id => id !== roomId)); // Bỏ chọn phòng\n    } else {\n      setSelectedRooms([...selectedRooms, roomId]); // Chọn phòng\n    }\n  };\n\n  const navigate = useNavigate();\n\n  const handleClick = async () => {\n    try {\n      await Promise.all(selectedRooms.map(roomId => {\n        const res = axios.put(`/rooms/availability/${roomId}`, {\n          dates: alldates\n        });\n        return res.data;\n      }));\n      setOpen(false);\n      toast.success(\"Phòng đã được đặt thành công!\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n      navigate(\"/\");\n    } catch (err) {\n      toast.error(\"Có lỗi xảy ra khi đặt phòng!\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n  }; // Nếu có lỗi, hiển thị thông báo lỗi\n\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"C\\xF3 l\\u1ED7i x\\u1EA3y ra: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select your rooms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), loading ? \"Loading...\" : data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\",\n          children: item.roomNumbers.map(roomNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: roomNumber._id,\n                checked: selectedRooms.includes(roomNumber._id),\n                onChange: () => handleSelect(roomNumber._id),\n                disabled: !isAvailable(roomNumber)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this), roomNumber.number, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this)\n          }, roomNumber._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        disabled: selectedRooms.length === 0,\n        children: \"Reserve Now!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"5KHWp6HLUFvCHih30z2R1WOqP3g=\", false, function () {\n  return [useFetch, useNavigate];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/Do_an_bao_ve/client/src/components/reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faCircleXmark","useFetch","useContext","useState","SearchContext","axios","useNavigate","toast","ToastContainer","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","alldates","isAvailable","roomNumber","isFound","unavailableDates","some","includes","handleSelect","roomId","filter","id","navigate","handleClick","Promise","all","map","res","put","success","position","POSITION","TOP_CENTER","err","message","item","roomNumbers","_id","number","length"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; \r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./reserve.css\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useContext, useState } from \"react\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\"; // Thêm ToastContainer từ react-toastify\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n  const [selectedRooms, setSelectedRooms] = useState([]);\r\n  const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\r\n  const { dates } = useContext(SearchContext);\r\n\r\n  const getDatesInRange = (startDate, endDate) => {\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    const date = new Date(start.getTime());\r\n    const dates = [];\r\n\r\n    while (date <= end) {\r\n      dates.push(new Date(date).getTime());\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n\r\n  const isAvailable = (roomNumber) => {\r\n    const isFound = roomNumber.unavailableDates.some((date) =>\r\n      alldates.includes(new Date(date).getTime())\r\n    );\r\n    return !isFound; // Trả về true nếu phòng có sẵn\r\n  };\r\n\r\n  const handleSelect = (roomId) => {\r\n    if (selectedRooms.includes(roomId)) {\r\n      setSelectedRooms(selectedRooms.filter((id) => id !== roomId)); // Bỏ chọn phòng\r\n    } else {\r\n      setSelectedRooms([...selectedRooms, roomId]); // Chọn phòng\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      await Promise.all(\r\n        selectedRooms.map((roomId) => {\r\n          const res = axios.put(`/rooms/availability/${roomId}`, {\r\n            dates: alldates,\r\n          });\r\n          return res.data;\r\n        })\r\n      );\r\n      setOpen(false);\r\n      toast.success(\"Phòng đã được đặt thành công!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      toast.error(\"Có lỗi xảy ra khi đặt phòng!\", {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Nếu có lỗi, hiển thị thông báo lỗi\r\n  if (error) {\r\n    return <div className=\"error\">Có lỗi xảy ra: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"reserve\">\r\n      <div className=\"rContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faCircleXmark}\r\n          className=\"rClose\"\r\n          onClick={() => setOpen(false)}\r\n        />\r\n        <span>Select your rooms:</span>\r\n        {loading ? (\r\n          \"Loading...\"\r\n        ) : (\r\n          data.map((item) => (\r\n            <div className=\"rItem\" key={item._id}>\r\n              <div className=\"rSelectRooms\">\r\n                {item.roomNumbers.map((roomNumber) => (\r\n                  <div className=\"room\" key={roomNumber._id}>\r\n                    <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={roomNumber._id}\r\n                        checked={selectedRooms.includes(roomNumber._id)}\r\n                        onChange={() => handleSelect(roomNumber._id)}\r\n                        disabled={!isAvailable(roomNumber)}\r\n                      />\r\n                      {roomNumber.number} {/* Bạn có thể bỏ dòng này nếu chỉ muốn hiển thị checkbox */}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <button onClick={handleClick} className=\"rButton\" disabled={selectedRooms.length === 0}>\r\n          Reserve Now!\r\n        </button>\r\n      </div>\r\n      <ToastContainer /> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}